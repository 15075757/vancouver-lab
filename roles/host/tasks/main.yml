- name: create br-labnet bridge
  template:
    src: ifcfg-br-labnet
    dest: /etc/sysconfig/network-scripts/ifcfg-br-labnet
    owner: root
    group: root
    mode: 0644
  when: destroy_environment is undefined
  notifies: restart network

- name: add interface to br-labnet
  template:
    src: ifcfg-interface
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
    owner: root
    group: root
    mode: 0644
  when: destroy_environment is undefined
  notifies: restart network


- name: flush the handlers so the ip moves to the bridge
  meta: flush_handlers

- name: Wait for SSH on the Instance # must run from local host because host can't reach instance with macvtap network
  become: no
  wait_for:
    port: 22
    host: "{{ inventory_hostname }}"
    search_regex: OpenSSH
    delay: 5
    timeout: 300
  delegate_to: localhost
  when: destroy_environment is undefined

- name: install role packages
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ role_packages }}"

- name: create openstack repo files
  copy:
    src: "{{ item }}"
    dest: /etc/yum.repos.d/
    owner: root
    group: root
    mode: 0644
  with_items:
  - CentOS-QEMU-EV.repo
  - CentOS-OpenStack-queens.repo

- name: create openstack repo gpg files
  copy:
    src: "{{ item }}"
    dest: /etc/pki/rpm-gpg/
    owner: root
    group: root
    mode: 0644
  with_items:
  - RPM-GPG-KEY-CentOS-SIG-Virtualization
  - RPM-GPG-KEY-CentOS-SIG-Cloud

- name: Start / Enable libvirtd
  service:
    name: libvirtd
    state: started
    enabled: yes

- name: Start / Enable firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: open ports for vbmc
  firewalld:
    port: 20100-21100/udp
    permanent: true
    state: enabled
  notifies: reload firewalld

# build networks
- name: define OSP network for each environment
  virt_net:
    command: define
    name: "env-{{ item }}-ospnet"
    xml: '{{ lookup("template", "osp-network.j2") }}'
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is undefined

- name: start OSP network for each environment
  virt_net:
    state: active
    name: "env-{{ item }}-ospnet"
    autostart: yes
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is undefined

- name: define Contrail network for each environment
  virt_net:
    command: define
    name: "env-{{ item }}-contrailnet"
    xml: '{{ lookup("template", "contrail-network.j2") }}'
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is undefined

- name: start Contrail network for each environment
  virt_net:
    state: active
    name: "env-{{ item }}-contrailnet"
    autostart: yes
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is undefined

# destroy networks
- name: remove OSP network for each environment
  virt_net:
    state: absent
    name: "env-{{ item }}-ospnet"
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is defined and destroy_environment

- name: remove Contrail network for each environment
  virt_net:
    state: absent
    name: "env-{{ item }}-contrailnet"
  with_sequence: start=1 end={{ instances }}
  when: destroy_environment is defined and destroy_environment